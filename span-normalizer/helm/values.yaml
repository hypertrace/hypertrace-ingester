# Default values for the helm chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# Note about Namespace
# --------------------
# It is deliberately left out here and using the helm -n or --namespace flag you can deploy your resources to the same
# namespace as the release. If you leave it out, your resources will be deployed to the default namespace.
# Also, not that the namespace you are deploying to should already exist otherwise the helm command will fail.
# You can always specify a different namespace for a resource by setting it directly in it's yaml file or
# making it configurable by defining it in this file.

###########
# Deployment
###########
replicaCount: 1
maxUnavailable: 0

image:
  repository: hypertrace/span-normalizer
  pullPolicy: IfNotPresent
  tagOverride: ""

imagePullSecrets: []

nodeLabels: {}

# This is defined in resources/configs/span-normalizer/application.conf as service.admin.port
containerAdminPort: 8099

javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0 -XX:MaxDirectMemorySize=128M"

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5

readinessProbe:
  initialDelaySeconds: 2
  periodSeconds: 5

resources:
  requests:
    cpu: 0.1
    memory: 1024Mi
  limits:
    cpu: 0.2
    memory: 1024Mi

deploymentLabels:
  app: span-normalizer

podLabels:
  app: span-normalizer

podAnnotations: {}

# The Deployment Selector match labels are different from the pod labels. Note that they should be a subset of the pod
# labels. You append new labels to them but cannot remove labels. If you remove or modify the labels you will need to
# delete the existing deployment bearing the same name and then redeploy. This is the reason why they are separated from
# the pod labels. You can add and remove pod labels without having an effect on the deployment.
# Also, please use "apiVersion: apps/v1" instead of the deprecated "apiVersion: extensions/v1beta1" for the deployment
# apiVersion in the yaml file.
deploymentSelectorMatchLabels:
  app: span-normalizer

serviceSelectorLabels:
  app: span-normalizer

###########
# Config Maps
###########
spanNormalizerConfig:
  name: span-normalizer-config
  # Important kafka streams configurations which are used in config template goes here.
  kafkaStreamsConfig:
    bootstrapServers: "bootstrap:9092"
    schemaRegistryUrl: "http://schema-registry-service:8081"
    #  Core config
    numStreamThreads: 2 # default = 1
    commitIntervalMs: 30000 # default = 30000
    # Common client (producer, consumer, admin) configs
    receiveBufferBytes: 4194304 # default = 32768 (kafka streams default)
    sendBufferBytes: 4194304 # default = 131072 (kafka streams default)
    # Producer configs
    producerAcks: all # default: 1
    producerBatchSize: 524288 # default = 16384
    producerLingerMs: 1000 # default = 100 (kafka streams default)
    producerCompressionType: "gzip" # default = none
    producerMaxRequestSize: 1048576 # default = 1048576
    producerBufferMemory: 134217728 # default = 33554432
    # Consumer configs
    consumerMaxPartitionFetchBytes: 8388608 # default = 1048576
    consumerMaxPollRecords: 1000 # default = 1000 (kafka streams default)
    consumerSessionTimeoutMs: 10000 # default = 10000
    # Others
    metricsRecordingLevel: INFO # default = INFO
  # All other streams config goes here.
  # Remove the flower braces and add key: value pair here.
  extraKafkaStreamsConfig: {}

logConfig:
  name: span-normalizer-log-appender-config
  monitorInterval: 30
  rootLogger:
    level: INFO
  appender:
    rolling:
      enabled: false

jmx:
  enabled: true
  port: 7022
  opts: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7022 -Dcom.sun.management.jmxremote.rmi.port=7022 -Djava.rmi.server.hostname=127.0.0.1"

prometheus:
  jmx:
    enabled: true
    port: 7071
    image:
      repository: solsson/kafka-prometheus-jmx-exporter@sha256
      tag: 6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "0.25"
        memory: "256Mi"

kafka-topic-creator:
  enabled: true
  jobName: raw-spans-topic-creator
  helmHook: pre-install,pre-upgrade
  kafka:
    topics:
      - name: raw-spans-from-jaeger-spans
        replicationFactor: 3
        partitions: 8
        configs:
          - retention.bytes=8589934592 # default = -1
          - retention.ms=43200000 # default = 604800000 (7 days)
          - max.message.bytes=1048588 # default = 1048588
  zookeeper:
    address: zookeeper:2181
  imagePullSecrets: []
  podAnnotations: {}
