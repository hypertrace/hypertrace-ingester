apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.traceEnricherConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    kafka.streams.config {
      application.id = structured-traces-enrichment-job
      bootstrap.servers = "{{ .Values.traceEnricherConfig.kafkaStreamsConfig.bootstrapServers }}"
      schema.registry.url = "{{ .Values.traceEnricherConfig.kafkaStreamsConfig.schemaRegistryUrl }}"
      # kafka streams config
      num.stream.threads = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.numStreamThreads }}"
      commit.interval.ms = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.commitIntervalMs }}"
      # Common client (prodcuer, consumer, admin) configs
      receive.buffer.bytes = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.receiveBufferBytes }}"
      send.buffer.bytes = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.sendBufferBytes }}"
      # Producer configs
      producer.acks = "{{ .Values.traceEnricherConfig.kafkaStreamsConfig.producerAcks }}"
      producer.batch.size = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.producerBatchSize }}"
      producer.linger.ms = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.producerLingerMs }}"
      producer.compression.type = "{{ .Values.traceEnricherConfig.kafkaStreamsConfig.producerCompressionType }}"
      producer.max.request.size = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.producerMaxRequestSize }}"
      producer.buffer.memory = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.producerBufferMemory }}"
      # Consumer configs
      consumer.max.partition.fetch.bytes = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.consumerMaxPartitionFetchBytes }}"
      consumer.max.poll.records = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.consumerMaxPollRecords }}"
      consumer.session.timeout.ms = "{{ int .Values.traceEnricherConfig.kafkaStreamsConfig.consumerSessionTimeoutMs }}"
      # Others
      metrics.recording.level = "{{ .Values.traceEnricherConfig.kafkaStreamsConfig.metricsRecordingLevel }}"
      {{- if .Values.traceEnricherConfig.extraKafkaStreamsConfig }}
      {{- range $key,$value := .Values.traceEnricherConfig.extraKafkaStreamsConfig }}
      {{ $key }} = {{ $value }}
      {{- end }}
      {{- end }}
    }

    enricher {
      DefaultServiceEntityEnricher {
        entity.service.config = {
          host = {{ .Values.traceEnricherConfig.entityServiceHost }}
          port = {{ .Values.traceEnricherConfig.entityServicePort }}
        }
      }

      BackendEntityEnricher {
        entity.service.config = {
          host = {{ .Values.traceEnricherConfig.entityServiceHost }}
          port = {{ .Values.traceEnricherConfig.entityServicePort }}
        }
      }

      EndpointEnricher {
        entity.service.config = {
          host = {{ .Values.traceEnricherConfig.entityServiceHost }}
          port = {{ .Values.traceEnricherConfig.entityServicePort }}
        }
      }

      EntitySpanEnricher {
        entity.service.config = {
          host = {{ .Values.traceEnricherConfig.entityServiceHost }}
          port = {{ .Values.traceEnricherConfig.entityServicePort }}
        }
        attribute.service.config = {
          host = {{ .Values.traceEnricherConfig.attributeServiceHost }}
          port = {{ .Values.traceEnricherConfig.attributeServicePort }}
        }
      }

      SpaceEnricher {
        config.service.config = {
          host = {{ .Values.traceEnricherConfig.configServiceHost }}
          port = {{ .Values.traceEnricherConfig.configServicePort }}
        }
        attribute.service.config = {
          host = {{ .Values.traceEnricherConfig.attributeServiceHost }}
          port = {{ .Values.traceEnricherConfig.attributeServicePort }}
        }
      }
    }
