service.name = hypertrace-trace-enricher
service.admin.port = 8099

main.class = org.hypertrace.traceenricher.trace.enricher.TraceEnricher

input.topic = "structured-traces-from-raw-spans"
input.topic = ${?KAFKA_SOURCE_TOPIC}
output.topic = "enriched-structured-traces"
output.topic = ${?KAFKA_SINK_TOPIC}

precreate.topics = false
precreate.topics = ${?PRE_CREATE_TOPICS}

kafka.streams.config = {
  application.id = structured-traces-enrichment-job
  num.stream.threads = 2
  num.stream.threads = ${?NUM_STREAM_THREADS}

  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}

  schema.registry.url = "http://localhost:8081"
  schema.registry.url = ${?SCHEMA_REGISTRY_URL}
}

enricher {
  names = ["SpanTypeAttributeEnricher", "ApiStatusEnricher", "EndpointEnricher", "TransactionNameEnricher", "ApiBoundaryTypeAttributeEnricher", "ErrorsAndExceptionsEnricher", "BackendEntityEnricher", "HttpAttributeEnricher", "DefaultServiceEntityEnricher", "UserAgentSpanEnricher", "SpaceEnricher", "EntitySpanEnricher"]

  clients = {
      entity.service.config = {
        host = localhost
        host = ${?ENTITY_SERVICE_HOST_CONFIG}
        port = 50061
        port = ${?ENTITY_SERVICE_PORT_CONFIG}
      }
      attribute.service.config = {
        host = localhost
        host = ${?ATTRIBUTE_SERVICE_HOST_CONFIG}
        port = 9012
        port = ${?ATTRIBUTE_SERVICE_PORT_CONFIG}
      }
      config.service.config = {
        host = localhost
        host = ${?CONFIG_SERVICE_HOST_CONFIG}
        port = 50101
        port = ${?CONFIG_SERVICE_PORT_CONFIG}
      }
  }

  DefaultServiceEntityEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.DefaultServiceEntityEnricher"
    dependencies = ["ApiBoundaryTypeAttributeEnricher"]
  }

  SpanTypeAttributeEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.SpanTypeAttributeEnricher"
  }

  HttpAttributeEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.HttpAttributeEnricher"
  }

  TransactionNameEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.TransactionNameEnricher"
  }

  ApiBoundaryTypeAttributeEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.ApiBoundaryTypeAttributeEnricher"
    dependencies = ["SpanTypeAttributeEnricher"]
  }

  ErrorsAndExceptionsEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.ErrorsAndExceptionsEnricher"
    dependencies = ["ApiStatusEnricher"]
  }

  BackendEntityEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.BackendEntityEnricher"
    dependencies = ["DefaultServiceEntityEnricher", "EndpointEnricher"]
  }

  ApiStatusEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.ApiStatusEnricher"
    dependencies = ["SpanTypeAttributeEnricher"]
  }

  UserAgentSpanEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.UserAgentSpanEnricher"
  }

  EndpointEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.endpoint.EndpointEnricher"
    dependencies = ["DefaultServiceEntityEnricher", "ApiBoundaryTypeAttributeEnricher"]
  }

  EntitySpanEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.EntitySpanEnricher"
  }

  SpaceEnricher {
    class = "org.hypertrace.traceenricher.enrichment.enrichers.space.SpaceEnricher"
  }
}

logger {
  names = ["file", "kafka"]
  kafka {
    brokers = "localhost:9092"
    brokers = ${?KAFKA_BOOTSTRAP_SERVERS}
    topic = "job-structured-trace-enrichment-log"
  }
  file {
    dir = "/var/logs/trace-enricher"
  }
}

metrics.reporter {
  prefix = org.hypertrace.traceenricher.StructuredTraceEnrichment
  names = ["prometheus"]
  console.reportInterval = 30
}
